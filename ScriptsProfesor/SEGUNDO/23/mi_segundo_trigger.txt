SQL> rem
SQL> 
SQL> set pagesize 99
SQL> set linesize 130
SQL> set colsep '|=|'
SQL> set underline =
SQL> set feedback on
SQL> set serveroutput on
SQL> 
SQL> REM
SQL> REM Owens, Kevin.
SQL> REM  Programming Oracle triggers and stored procedures / Kevin Owens
SQL> 
SQL> REM [Owens,2003,section 6.4]
SQL> 
SQL> rem trigger que se dispara en inserci¢n y en actualizaci¢n
SQL> /*
SQL> DROP TABLE TEMP;
SQL> CREATE TABLE TEMP(X NUMBER, Y NUMBER, Z NUMBER DEFAULT 5);
SQL> 
SQL> 
SQL> INSERT INTO TEMP (M) VALUES (3);
SQL> INSERT INTO TEMP (N) VALUES (10);
SQL> 
SQL> INSERT INTO TEMP (n) VALUES (1);
SQL> UPDATE TEMP SET n=n+1 WHERE n>=1;
SQL> 
SQL> 
SQL> DROP TABLE TEMPORAL5;
SQL> CREATE TABLE TEMPORAL5 (N NUMBER, M NUMBER DEFAULT 5);
SQL> 
SQL> */
SQL> REM 6.5 Example Row Triggers
SQL> 
SQL> rem
SQL> DROP TABLE TEMPORAL5;
DROP TABLE TEMPORAL5
           *
ERROR at line 1:
ORA-00942: table or view does not exist 


SQL> CREATE TABLE TEMPORAL5 (X NUMBER, Y NUMBER, Z NUMBER DEFAULT 5);

Table created.

SQL> 
SQL> 
SQL> CREATE OR REPLACE TRIGGER temp_aiur
  2  AFTER INSERT OR UPDATE OF Y ON TEMPORAL5
  3  FOR EACH ROW
  4  WHEN (OLD.Y IS NULL and NEW.Y IS NOT NULL
  5        OR NEW.X BETWEEN 1 AND 10)
  6  BEGIN
  7      CASE
  8      WHEN inserting THEN
  9          dbms_output.put_line('X := '||:new.x);
 10      WHEN updating THEN
 11         dbms_output.put_line
 12            ('Y is reset from NULL');
 13      END CASE;
 14  END;
 15  .
SQL> /

Trigger created.

SQL> 
SQL> REM 2.  Write a trigger to print
SQL> REM the current values in a row
SQL> REM being deleted.
SQL> REM
SQL> 
SQL> CREATE OR REPLACE TRIGGER temp_adr2
  2  AFTER DELETE ON TEMPORAL5
  3  FOR EACH ROW
  4  BEGIN
  5      dbms_output.put_line
  6         (:old.x||' '||:old.y||' '||:old.z);
  7  END;
  8  .
SQL> /

Trigger created.

SQL> 
SQL> 
SQL> REM 4. Write two triggers that accomplish
SQL> REM the same as the prior six triggers.
SQL> REM  ---
> REM DROP TRIGGER temp_biudr;
SQL> CREATE OR REPLACE TRIGGER temp_biudr2
  2  BEFORE INSERT OR UPDATE OR DELETE ON TEMPORAL5
  3  FOR EACH ROW
  4  BEGIN
  5      CASE
  6      WHEN inserting THEN
  7          dbms_output.put_line('inserting before');
  8      WHEN updating THEN
  9          dbms_output.put_line('updating before');
 10      WHEN deleting THEN
 11          dbms_output.put_line('deleting before');
 12      END CASE;
 13  END;
 14  .
SQL> /

Trigger created.

SQL> 
SQL> CREATE OR REPLACE TRIGGER temp_aiudr
  2  AFTER INSERT OR UPDATE OR DELETE ON TEMPORAL5
  3  FOR EACH ROW
  4  BEGIN
  5      CASE
  6      WHEN inserting THEN
  7          dbms_output.put_line('inserting after');
  8      WHEN updating THEN
  9          dbms_output.put_line('updating after');
 10      WHEN deleting THEN
 11          dbms_output.put_line('deleting after');
 12      END CASE;
 13  END;
 14  .
SQL> /
CREATE OR REPLACE TRIGGER temp_aiudr
                          *
ERROR at line 1:
ORA-04095: trigger 'TEMP_AIUDR' already exists on another table, cannot replace it 


SQL> 
SQL> -- DATOS DE PRUEBA
SQL> REM
SQL> REM
SQL> 
SQL> INSERT INTO TEMPORAL5 (X) VALUES (3);
inserting before                                                                                                                  
X := 3                                                                                                                            

1 row created.

SQL> INSERT INTO TEMPORAL5 (Y) VALUES (10);
inserting before                                                                                                                  
X :=                                                                                                                              

1 row created.

SQL> 
SQL> INSERT INTO TEMPORAL5 (X) VALUES (100);
inserting before                                                                                                                  

1 row created.

SQL> SELECT * FROM TEMPORAL5;

         X|=|         Y|=|         Z                                                                                              
==========|=|==========|=|==========                                                                                              
         3|=|nada      |=|         5                                                                                              
nada      |=|        10|=|         5                                                                                              
       100|=|nada      |=|         5                                                                                              

3 rows selected.

SQL> UPDATE TEMPORAL5 SET X=X+1 WHERE X>=1;
updating before                                                                                                                   
updating before                                                                                                                   

2 rows updated.

SQL> 
SQL> SELECT * FROM TEMPORAL5;

         X|=|         Y|=|         Z                                                                                              
==========|=|==========|=|==========                                                                                              
         4|=|nada      |=|         5                                                                                              
nada      |=|        10|=|         5                                                                                              
       101|=|nada      |=|         5                                                                                              

3 rows selected.

SQL> DELETE FROM TEMPORAL5 WHERE X>1;
deleting before                                                                                                                   
4  5                                                                                                                              
deleting before                                                                                                                   
101  5                                                                                                                            

2 rows deleted.

SQL> SELECT * FROM TEMPORAL5;

         X|=|         Y|=|         Z                                                                                              
==========|=|==========|=|==========                                                                                              
nada      |=|        10|=|         5                                                                                              

1 row selected.

SQL> INSERT INTO TEMPORAL5 (X) VALUES (30);
inserting before                                                                                                                  

1 row created.

SQL> INSERT INTO TEMPORAL5 (X) VALUES (40);
inserting before                                                                                                                  

1 row created.

SQL> INSERT INTO TEMPORAL5 (X) VALUES (50);
inserting before                                                                                                                  

1 row created.

SQL> INSERT INTO TEMPORAL5 (X) VALUES (60);
inserting before                                                                                                                  

1 row created.

SQL> SELECT * FROM TEMPORAL5;

         X|=|         Y|=|         Z                                                                                              
==========|=|==========|=|==========                                                                                              
nada      |=|        10|=|         5                                                                                              
        30|=|nada      |=|         5                                                                                              
        40|=|nada      |=|         5                                                                                              
        50|=|nada      |=|         5                                                                                              
        60|=|nada      |=|         5                                                                                              

5 rows selected.

SQL> INSERT INTO TEMPORAL5 (Y) VALUES (10);
inserting before                                                                                                                  
X :=                                                                                                                              

1 row created.

SQL> 
SQL> INSERT INTO TEMPORAL5 (X) VALUES (100);
inserting before                                                                                                                  

1 row created.

SQL> SELECT * FROM TEMPORAL5;

         X|=|         Y|=|         Z                                                                                              
==========|=|==========|=|==========                                                                                              
nada      |=|        10|=|         5                                                                                              
        30|=|nada      |=|         5                                                                                              
        40|=|nada      |=|         5                                                                                              
        50|=|nada      |=|         5                                                                                              
        60|=|nada      |=|         5                                                                                              
nada      |=|        10|=|         5                                                                                              
       100|=|nada      |=|         5                                                                                              

7 rows selected.

SQL> DELETE FROM TEMPORAL5 WHERE X>39;
deleting before                                                                                                                   
40  5                                                                                                                             
deleting before                                                                                                                   
50  5                                                                                                                             
deleting before                                                                                                                   
60  5                                                                                                                             
deleting before                                                                                                                   
100  5                                                                                                                            

4 rows deleted.

SQL> SELECT * FROM TEMPORAL5;

         X|=|         Y|=|         Z                                                                                              
==========|=|==========|=|==========                                                                                              
nada      |=|        10|=|         5                                                                                              
        30|=|nada      |=|         5                                                                                              
nada      |=|        10|=|         5                                                                                              

3 rows selected.

SQL> DELETE FROM TEMPORAL5 WHERE X>7;
deleting before                                                                                                                   
30  5                                                                                                                             

1 row deleted.

SQL> SELECT * FROM TEMPORAL5;

         X|=|         Y|=|         Z                                                                                              
==========|=|==========|=|==========                                                                                              
nada      |=|        10|=|         5                                                                                              
nada      |=|        10|=|         5                                                                                              

2 rows selected.

SQL> 
SQL> CREATE OR REPLACE TRIGGER temp5_aiur
  2  AFTER INSERT OR UPDATE OF Y ON TEMPORAL5
  3  FOR EACH ROW
  4  WHEN (OLD.Y IS NULL and NEW.Y IS NOT NULL
  5        OR NEW.X BETWEEN 1 AND 10)
  6  BEGIN
  7      CASE
  8      WHEN inserting THEN
  9          dbms_output.put_line('X := '||:new.x);
 10      WHEN updating THEN
 11         dbms_output.put_line
 12            ('Y is reset from NULL');
 13      END CASE;
 14  END;
 15  .
SQL> /

Trigger created.

SQL> INSERT INTO TEMPORAL5 (X) VALUES (10);
inserting before                                                                                                                  
X := 10                                                                                                                           
X := 10                                                                                                                           

1 row created.

SQL> INSERT INTO TEMPORAL5 (X) VALUES (9);
inserting before                                                                                                                  
X := 9                                                                                                                            
X := 9                                                                                                                            

1 row created.

SQL> INSERT INTO TEMPORAL5 (X) VALUES (8);
inserting before                                                                                                                  
X := 8                                                                                                                            
X := 8                                                                                                                            

1 row created.

SQL> 
SQL> INSERT INTO TEMPORAL5 (X,y,z) VALUES (7,10,20);
inserting before                                                                                                                  
X := 7                                                                                                                            
X := 7                                                                                                                            

1 row created.

SQL> INSERT INTO TEMPORAL5 (X,y,z) VALUES (7,11,25);
inserting before                                                                                                                  
X := 7                                                                                                                            
X := 7                                                                                                                            

1 row created.

SQL> INSERT INTO TEMPORAL5 (X,y,z) VALUES (7,12,28);
inserting before                                                                                                                  
X := 7                                                                                                                            
X := 7                                                                                                                            

1 row created.

SQL> INSERT INTO TEMPORAL5 (X,y,z) VALUES (7,13,20);
inserting before                                                                                                                  
X := 7                                                                                                                            
X := 7                                                                                                                            

1 row created.

SQL> 
SQL> 
SQL> 
SQL> 
SQL> rem
SQL> 
SQL> CREATE OR REPLACE TRIGGER temp_adr
  2  AFTER DELETE ON TEMPORAL5
  3  FOR EACH ROW
  4  BEGIN
  5      dbms_output.put_line
  6         (:old.x||' '||:old.y||' '||:old.z);
  7  END;
  8  .
SQL> /

Trigger created.

SQL> 
SQL> 
SQL> 
SQL> 
SQL> rem Write two triggers that accomplish the same as the prior six triggers.
SQL> rem
SQL> 
SQL> CREATE OR REPLACE TRIGGER temp_biudr
  2  BEFORE INSERT OR UPDATE OR DELETE ON TEMPORAL5
  3  FOR EACH ROW
  4  BEGIN
  5      CASE
  6      WHEN inserting THEN
  7          dbms_output.put_line('inserting before');
  8      WHEN updating THEN
  9          dbms_output.put_line('updating before');
 10      WHEN deleting THEN
 11          dbms_output.put_line('deleting before');
 12      END CASE;
 13  END;
 14  .
SQL> /

Trigger created.

SQL> 
SQL> SELECT * FROM TEMPORAL5;

         X|=|         Y|=|         Z                                                                                              
==========|=|==========|=|==========                                                                                              
nada      |=|        10|=|         5                                                                                              
nada      |=|        10|=|         5                                                                                              
        10|=|nada      |=|         5                                                                                              
         9|=|nada      |=|         5                                                                                              
         8|=|nada      |=|         5                                                                                              
         7|=|        10|=|        20                                                                                              
         7|=|        11|=|        25                                                                                              
         7|=|        12|=|        28                                                                                              
         7|=|        13|=|        20                                                                                              

9 rows selected.

SQL> 
SQL> DELETE FROM TEMPORAL5 WHERE X>1;
deleting before                                                                                                                   
deleting before                                                                                                                   
10  5                                                                                                                             
10  5                                                                                                                             
deleting before                                                                                                                   
deleting before                                                                                                                   
9  5                                                                                                                              
9  5                                                                                                                              
deleting before                                                                                                                   
deleting before                                                                                                                   
8  5                                                                                                                              
8  5                                                                                                                              
deleting before                                                                                                                   
deleting before                                                                                                                   
7 10 20                                                                                                                           
7 10 20                                                                                                                           
deleting before                                                                                                                   
deleting before                                                                                                                   
7 11 25                                                                                                                           
7 11 25                                                                                                                           
deleting before                                                                                                                   
deleting before                                                                                                                   
7 12 28                                                                                                                           
7 12 28                                                                                                                           
deleting before                                                                                                                   
deleting before                                                                                                                   
7 13 20                                                                                                                           
7 13 20                                                                                                                           

7 rows deleted.

SQL> rem
SQL> SELECT * FROM TEMPORAL5;

         X|=|         Y|=|         Z                                                                                              
==========|=|==========|=|==========                                                                                              
nada      |=|        10|=|         5                                                                                              
nada      |=|        10|=|         5                                                                                              

2 rows selected.

SQL> 
SQL> CREATE OR REPLACE TRIGGER temp_aiudr2
  2  AFTER INSERT OR UPDATE OR DELETE ON TEMPORAL5
  3  FOR EACH ROW
  4  BEGIN
  5      CASE
  6      WHEN inserting THEN
  7          dbms_output.put_line('inserting after');
  8      WHEN updating THEN
  9          dbms_output.put_line('updating after');
 10      WHEN deleting THEN
 11          dbms_output.put_line('deleting after');
 12      END CASE;
 13  END;
 14  .
SQL> /

Trigger created.

SQL> 
SQL> INSERT INTO TEMPORAL5 (X) VALUES (10);
inserting before                                                                                                                  
inserting before                                                                                                                  
inserting after                                                                                                                   
X := 10                                                                                                                           
X := 10                                                                                                                           

1 row created.

SQL> INSERT INTO TEMPORAL5 (X) VALUES (9);
inserting before                                                                                                                  
inserting before                                                                                                                  
inserting after                                                                                                                   
X := 9                                                                                                                            
X := 9                                                                                                                            

1 row created.

SQL> INSERT INTO TEMPORAL5 (X) VALUES (8);
inserting before                                                                                                                  
inserting before                                                                                                                  
inserting after                                                                                                                   
X := 8                                                                                                                            
X := 8                                                                                                                            

1 row created.

SQL> 
SQL> INSERT INTO TEMPORAL5 (X,y,z) VALUES (7,10,20);
inserting before                                                                                                                  
inserting before                                                                                                                  
inserting after                                                                                                                   
X := 7                                                                                                                            
X := 7                                                                                                                            

1 row created.

SQL> INSERT INTO TEMPORAL5 (X,y,z) VALUES (7,11,25);
inserting before                                                                                                                  
inserting before                                                                                                                  
inserting after                                                                                                                   
X := 7                                                                                                                            
X := 7                                                                                                                            

1 row created.

SQL> INSERT INTO TEMPORAL5 (X,y,z) VALUES (7,12,28);
inserting before                                                                                                                  
inserting before                                                                                                                  
inserting after                                                                                                                   
X := 7                                                                                                                            
X := 7                                                                                                                            

1 row created.

SQL> INSERT INTO TEMPORAL5 (X,y,z) VALUES (7,13,20);
inserting before                                                                                                                  
inserting before                                                                                                                  
inserting after                                                                                                                   
X := 7                                                                                                                            
X := 7                                                                                                                            

1 row created.

SQL> 
SQL> 
SQL> DROP TRIGGER temp_aiudr2;

Trigger dropped.

SQL> DROP TRIGGER temp_biudr;

Trigger dropped.

SQL> DROP TRIGGER temp_adr;

Trigger dropped.

SQL> DROP TRIGGER temp5_aiur;

Trigger dropped.

SQL> DROP TRIGGER temp_aiudr;

Trigger dropped.

SQL> DROP TRIGGER temp_biudr2;

Trigger dropped.

SQL> DROP TRIGGER temp_adr2;

Trigger dropped.

SQL> DROP TRIGGER temp_aiur;

Trigger dropped.

SQL> 
SQL> /*
SQL> > desc professors
SQL>  Name                           Null?    Type
SQL>  ------------------------------ -------- ------------
SQL>  PROF_NAME                      NOT NULL VARCHAR2(10)
SQL>  SPECIALTY                      NOT NULL VARCHAR2(20)
SQL>  HIRE_DATE                      NOT NULL DATE
SQL>  SALARY                         NOT NULL NUMBER(7,2)
SQL>  TENURE                         NOT NULL VARCHAR2(3)
SQL>  DEPARTMENT                     NOT NULL VARCHAR2(10)
SQL> 
SQL> */
SQL> 
SQL> REM DECLARACION DE LA TABLA PROFESSORS, SUS DATOS Y SUS RESTRICCIONES.
SQL> 
SQL> drop table professors;

Table dropped.

SQL> create table professors (
  2   PROF_NAME    VARCHAR2(10),
  3   SPECIALTY    VARCHAR2(20),
  4   HIRE_DATE    DATE,
  5   SALARY       NUMBER(7,2),
  6   TENURE       VARCHAR2(3),
  7   DEPARTMENT   VARCHAR2(10));

Table created.

SQL> 
SQL>  INSERT INTO PROFESSORS values ('Blake', 'Mathematics',to_date('07-07-03','DD-MM-YY'),1000,'YES','MATH');

1 row created.

SQL>  INSERT INTO PROFESSORS values ('Milton', 'Am History',to_date('07-07-02','DD-MM-YY'),1000,'YES','HIST');

1 row created.

SQL>  INSERT INTO PROFESSORS values ('Wilson', 'English',to_date('08-07-01','DD-MM-YY'),1000,'YES','ENGL');

1 row created.

SQL>  INSERT INTO PROFESSORS values ('Jones', 'Euro Hist',to_date('05-08-00','DD-MM-YY'),1000,'YES','MATH');

1 row created.

SQL>  INSERT INTO PROFESSORS values ('CARLOS', 'Ancient Hist',to_date('04-08-99','DD-MM-YY'),45000,'YES','MATE');

1 row created.

SQL> 
SQL>  SELECT * FROM PROFESSORS;

PROF_NAME |=|SPECIALTY           |=|HIRE_DATE|=|    SALARY|=|TEN|=|DEPARTMENT                                                     
==========|=|====================|=|=========|=|==========|=|===|=|==========                                                     
Blake     |=|Mathematics         |=|07-JUL-03|=|  1,000.00|=|YES|=|MATH                                                           
Milton    |=|Am History          |=|07-JUL-02|=|  1,000.00|=|YES|=|HIST                                                           
Wilson    |=|English             |=|08-JUL-01|=|  1,000.00|=|YES|=|ENGL                                                           
Jones     |=|Euro Hist           |=|05-AUG-00|=|  1,000.00|=|YES|=|MATH                                                           
CARLOS    |=|Ancient Hist        |=|04-AUG-99|=| 45,000.00|=|YES|=|MATE                                                           

5 rows selected.

SQL> 
SQL> ALTER TABLE professors
  2      ADD CONSTRAINT ck_professors_department
  3      CHECK (department IN
  4  ('MATH','HIST','ENGL','SCIE'));
    ADD CONSTRAINT ck_professors_department
                   *
ERROR at line 2:
ORA-02293: cannot validate (SERGIONAVA.CK_PROFESSORS_DEPARTMENT) - check constraint violated 


SQL> 
SQL> ALTER TABLE professors
  2      ADD CONSTRAINT ck_professors_tenure
  3      CHECK (tenure IN ('YES','NO'));

Table altered.

SQL> 
SQL> ALTER TABLE professors
  2      ADD CONSTRAINT ck_professors_salary
  3      CHECK (salary < 30000);
    ADD CONSTRAINT ck_professors_salary
                   *
ERROR at line 2:
ORA-02293: cannot validate (SERGIONAVA.CK_PROFESSORS_SALARY) - check constraint violated 


SQL> 
SQL> CREATE OR REPLACE TRIGGER professors_bir
  2  BEFORE INSERT ON professors
  3  FOR EACH ROW
  4  DECLARE
  5      msg VARCHAR2(100) :=
  6          'The salary exceeds the ENGL maximum of $10,000.00';
  7  BEGIN
  8      -- --------------------------------------
  9      -- OVERRIDE COLUMN RULES
 10      -- --------------------------------------
 11  
 12      -- truncate hours, minutes, seconds of hire date
 13      :NEW.hire_date := TRUNC(:NEW.hire_date);
 14  
 15      -- round salary
 16      :NEW.salary := ROUND(:NEW.salary);
 17  
 18      -- convert department to upper case
 19      :NEW.department := UPPER(:NEW.department);
 20      -- --------------------------------------
 21      -- REJECT TRANSACTION RULES
 22      -- --------------------------------------
 23      IF :NEW.department='ENGL' AND :NEW.salary > 10000 THEN
 24          RAISE_APPLICATION_ERROR(-20000,msg);
 25      END IF;
 26  
 27      -- --------------------------------------
 28      -- TAKE ACTION RULES
 29      -- --------------------------------------
 30      dbms_output.put_line
 31         ('Before Insert Row Trigger Action');
 32  END;
 33  .
SQL> /

Trigger created.

SQL> 
SQL> rem 6.6.3 Before versus After
SQL> 
SQL> CREATE OR REPLACE TRIGGER professors_bir
  2  BEFORE INSERT ON professors
  3  FOR EACH ROW
  4  BEGIN
  5      :NEW.hire_date := TRUNC(:NEW.hire_date);
  6      :NEW.salary := ROUND(:NEW.salary);
  7      :NEW.department := UPPER(:NEW.department);
  8  END;
  9  .
SQL> /

Trigger created.

SQL> 
SQL> 
SQL> CREATE OR REPLACE TRIGGER professors_bir
  2  BEFORE INSERT ON professors
  3  FOR EACH ROW
  4  BEGIN
  5      :NEW.hire_date := TRUNC(:NEW.hire_date);
  6      :NEW.salary := ROUND(:NEW.salary);
  7      :NEW.department := UPPER(:NEW.department);
  8  END;
  9  .
SQL> /

Trigger created.

SQL> 
SQL> 
SQL> CREATE OR REPLACE TRIGGER professors_air
  2  AFTER INSERT ON professors
  3  FOR EACH ROW
  4  DECLARE
  5      msg VARCHAR2(100) :=
  6          'The salary exceeds the ENGL maximum of'|| '$10,000.00';
  7  BEGIN
  8      IF :NEW.department='ENGL' AND :NEW.salary > 10000 THEN
  9          RAISE_APPLICATION_ERROR(-20000,msg);
 10      END IF;
 11      dbms_output.put_line
 12         ('Before Insert Row Trigger Action');
 13  END;
 14  .
SQL> /

Trigger created.

SQL> 
SQL> REM 6.6.4 Using Packages for Procedural Constraints
SQL> CREATE OR REPLACE PACKAGE professors_cons IS
  2  
  3      FUNCTION salary(sal professors.salary%TYPE)
  4          RETURN professors.salary%TYPE;
  5  
  6      FUNCTION hire_date(hd professors.hire_date%TYPE)
  7          RETURN professors.hire_date%TYPE;
  8  
  9      FUNCTION department(dept professors.department%TYPE)
 10          RETURN professors.department%TYPE;
 11  
 12      PROCEDURE validate_salary
 13          (dept professors.department%TYPE,
 14           sal professors.salary%TYPE);
 15  
 16      PROCEDURE print_action;
 17  
 18  END professors_cons;
 19  .
SQL> /

Package created.

SQL> 
SQL> CREATE OR REPLACE TRIGGER professors_bir
  2  BEFORE INSERT ON professors
  3  FOR EACH ROW
  4  BEGIN
  5      :NEW.hire_date :=
  6              professors_cons.hire_date(:NEW.hire_date);
  7      :NEW.salary :=
  8              professors_cons.salary(:NEW.salary);
  9      :NEW.department :=
 10              professors_cons.department(:NEW.department);
 11  END;
 12  .
SQL> /

Trigger created.

SQL> 
SQL> REM   The AFTER-INSERT trigger is two procedure calls.
SQL> 
SQL> 
SQL> 
SQL> CREATE OR REPLACE TRIGGER professors_air
  2  AFTER INSERT ON professors
  3  FOR EACH ROW
  4  BEGIN
  5      professors_cons.validate_salary
  6              (:NEW.department, :NEW.salary);
  7      professors_cons.print_action;
  8  END;
  9  .
SQL> /

Trigger created.

SQL> 
SQL> REM
SQL>  INSERT INTO PROFESSORS values ('JUAN', 'Hist Euro',to_date('05-08-00','DD-MM-YY'),1000,'YES','MATH');
Before Insert Row Trigger Action                                                                                                  

1 row created.

SQL>  INSERT INTO PROFESSORS values ('JUAN', 'Hist Euro',to_date('05-08-00','DD-MM-YY'),1000,'YES','MATE');
Before Insert Row Trigger Action                                                                                                  

1 row created.

SQL>  INSERT INTO PROFESSORS values ('CARLOS', 'Antig Hist',to_date('04-08-99','DD-MM-YY'),1000,'YES','MATH');
Before Insert Row Trigger Action                                                                                                  

1 row created.

SQL> 
SQL> 
SQL>  SELECT * FROM PROFESSORS;

PROF_NAME |=|SPECIALTY           |=|HIRE_DATE|=|    SALARY|=|TEN|=|DEPARTMENT                                                     
==========|=|====================|=|=========|=|==========|=|===|=|==========                                                     
Blake     |=|Mathematics         |=|07-JUL-03|=|  1,000.00|=|YES|=|MATH                                                           
Milton    |=|Am History          |=|07-JUL-02|=|  1,000.00|=|YES|=|HIST                                                           
Wilson    |=|English             |=|08-JUL-01|=|  1,000.00|=|YES|=|ENGL                                                           
Jones     |=|Euro Hist           |=|05-AUG-00|=|  1,000.00|=|YES|=|MATH                                                           
CARLOS    |=|Ancient Hist        |=|04-AUG-99|=| 45,000.00|=|YES|=|MATE                                                           
JUAN      |=|Hist Euro           |=|05-AUG-00|=|  1,000.00|=|YES|=|MATH                                                           
JUAN      |=|Hist Euro           |=|05-AUG-00|=|  1,000.00|=|YES|=|MATE                                                           
CARLOS    |=|Antig Hist          |=|04-AUG-99|=|  1,000.00|=|YES|=|MATH                                                           

8 rows selected.

SQL> REM
SQL> REM
SQL> CREATE OR REPLACE PACKAGE BODY professors_cons IS
  2  
  3      FUNCTION salary(sal professors.salary%TYPE)
  4          RETURN professors.salary%TYPE IS
  5      BEGIN
  6          RETURN ROUND(sal);
  7      END salary;
  8  
  9      FUNCTION hire_date(hd professors.hire_date%TYPE)
 10          RETURN professors.hire_date%TYPE IS
 11      BEGIN
 12          RETURN TRUNC(hd);
 13      END hire_date;
 14  
 15      FUNCTION department(dept professors.department%TYPE)
 16          RETURN professors.department%TYPE IS
 17      BEGIN
 18          RETURN UPPER(dept);
 19      END department;
 20  
 21      PROCEDURE validate_salary
 22          (dept professors.department%TYPE,
 23           sal professors.salary%TYPE)
 24      IS
 25          msg VARCHAR2(100) :=
 26           'The salary exceeds the ENGL maximum of $10,000.00';
 27      BEGIN
 28          IF dept ='ENGL' AND sal  > 10000 THEN
 29              RAISE_APPLICATION_ERROR(-20000,msg);
 30          END IF;
 31      END validate_salary;
 32  
 33      PROCEDURE print_action IS
 34      BEGIN
 35          dbms_output.put_line
 36              ('Before Insert Row Trigger Action');
 37      END print_action;
 38  END professors_cons;
 39  .
SQL> /

Package body created.

SQL> 
SQL> REM
SQL> 
SQL> 
SQL> REM
SQL> 
SQL> spool off
